{"ast":null,"code":"var _jsxFileName = \"/Users/karenhernandeze/Desktop/WRSP-FB/material-app/src/forms/EditMaterialForm.js\";\nimport React, { Component } from 'react';\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport { withRouter } from \"react-router-dom\";\n\nclass EditMaterialForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({ ...this.state,\n        [name]: value\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      keyName: '',\n      presentation: '',\n      measurementType: '',\n      dimensions: '',\n      quantityPresentation: '',\n      amountToRequest: '',\n      price: '',\n      supplier: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshCourses();\n  }\n\n  refreshCourses() {\n    //console.log(this.state.id)\n    const course = CourseDataService.retrieveCourse(this.state.id).then(response => this.setState({\n      name: response.name,\n      keyName: response.keyName,\n      presentation: response.presentation,\n      measurementType: response.measurementType,\n      dimensions: response.dimensions,\n      quantityPresentation: response.quantityPresentation,\n      amountToRequest: response.amountToRequest,\n      price: response.price,\n      supplier: response.supplier\n    }));\n  }\n\n  onSubmit() {\n    //console.log(\"state \"+ this.state.name)\n    //console.log(\"state \"+ this.state.id)\n    CourseDataService.updateCourse(this.state.id, this.state).then(response => {\n      this.props.history.push(`/`);\n      this.setState({\n        material: response.data\n      });\n    }); //console.log(\"SSSSSS \"+ this.state.name)\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"UPDATE Materials\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      name: \"name\",\n      label: \"name\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"keyName\",\n      label: \"keyName\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.keyName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"presentation\",\n      label: \"presentation\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.presentation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"measurementType\",\n      label: \"measurementType\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.measurementType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"dimensions\",\n      label: \"dimensions\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.dimensions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"quantityPresentation\",\n      label: \"quantityPresentation\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.quantityPresentation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"amountToRequest\",\n      label: \"amountToRequest\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.amountToRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"price\",\n      label: \"price\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"supplier\",\n      label: \"supplier\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.supplier,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Update\"))));\n  }\n\n}\n\nexport default withRouter(EditMaterialForm);\n/*\nimport React, { Component } from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport {withRouter} from 'react-router-dom';\n\nclass EditMaterialForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            keyName: '',\n            specification: {\n                presentation: '',\n                measurementType: '',\n                dimensions: '',\n                quantityPresentation: '',\n                amountToRequest: '',\n                price: '',\n                supplier: ''\n            },\n            message: null\n        }\n    }\n\n    componentDidMount() {\n        const material = CourseDataService.retrieveCourse(this.props.match.params.id);\n        console.log('edit ... ' + material  )\n\n        this.setState({\n            name: material.name,\n            keyName: material.keyName,\n            specification: {\n                presentation: material.specification.presentation,\n                measurementType: material.specification.measurementType,\n                dimensions: material.specification.dimensions,\n                quantityPresentation: material.specification.quantityPresentation,\n                amountToRequest: material.specification.amountToRequest,\n                price: material.specification.price,\n                supplier: material.specification.supplier\n            }\n        })\n    }\n\n    updateCourseClicked() {\n        console.log(this.state)\n        CourseDataService.createCourse(this.state)\n            .then(\n                response => {\n                    //console.log(response);\n                    this.props.history.push(`/`)\n                    this.setState({ material: response.data })\n                }\n            )\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            ...this.state,\n            [name]: value\n        });\n        console.log(this.state)\n    };\n\n    handleSpecificationChange = event => {\n        const { value, name } = event.target;\n        const {specification} = this.state;\n        specification[name]=value;\n        this.setState({\n            ...this.state,\n            specification\n        });\n        console.log(this.state)\n    };\n\n    render()  {\n        console.log(this.props.match.params.id)\n        return (\n            <div className=\"container\">\n                <h3>Update Material</h3>\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <InputForm\n                            name=\"name\"\n                            label=\"name\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.name}\n                        />\n                        <InputForm\n                            name=\"keyName\"\n                            label=\"keyName\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.keyName}\n                        />\n                        <InputForm\n                            name=\"presentation\"\n                            label=\"presentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.presentation}\n                        />\n                        <InputForm\n                            name=\"measurementType\"\n                            label=\"measurementType\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.measurementType}\n                        />\n                        <InputForm\n                            name=\"dimensions\"\n                            label=\"dimensions\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.dimensions}\n                        />\n                        <InputForm\n                            name=\"quantityPresentation\"\n                            label=\"quantityPresentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.quantityPresentation}\n                        />\n                        <InputForm\n                            name=\"amountToRequest\"\n                            label=\"amountToRequest\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.amountToRequest}\n                        />\n                        <InputForm\n                            name=\"price\"\n                            label=\"price\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.price}\n                        />\n                        <InputForm\n                            name=\"supplier\"\n                            label=\"supplier\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.supplier}\n                        />\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.updateCourseClicked}>Update</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter (EditMaterialForm);\n\n\n\n\n    return (\n        <form\n            onSubmit={event => {\n                event.preventDefault()\n\n                props.updateMaterial(material.id, material)\n            }}\n        >\n\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" value={material.name} onChange={handleInputChange} />\n            <label>Key</label>\n            <input type=\"text\" name=\"username\" value={material.keyName} onChange={handleInputChange} />\n            <label>Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.presentation} onChange={handleInputChange} />\n            <label>Measurement</label>\n            <input type=\"text\" name=\"username\" value={material.measurementType} onChange={handleInputChange} />\n            <label>Dimensions</label>\n            <input type=\"text\" name=\"username\" value={material.dimensionsMaterial} onChange={handleInputChange} />\n            <label>Quantity - Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.quantityPresentation} onChange={handleInputChange} />\n            <label>Total Amount</label>\n            <input type=\"text\" name=\"username\" value={material.amountToRequest} onChange={handleInputChange} />\n            <label>Price</label>\n            <input type=\"text\" name=\"username\" value={material.price} onChange={handleInputChange} />\n            <label>Supplier</label>\n            <input type=\"text\" name=\"username\" value={material.supplier} onChange={handleInputChange} />\n\n            <button>Update material</button>\n            <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\n                Cancel\n            </button>\n        </form>\n    )\n}\n\nexport default EditMaterialForm*/","map":{"version":3,"sources":["/Users/karenhernandeze/Desktop/WRSP-FB/material-app/src/forms/EditMaterialForm.js"],"names":["React","Component","CourseDataService","InputForm","withRouter","EditMaterialForm","constructor","props","handleChange","event","value","name","target","setState","state","console","log","id","match","params","keyName","presentation","measurementType","dimensions","quantityPresentation","amountToRequest","price","supplier","onSubmit","bind","componentDidMount","refreshCourses","course","retrieveCourse","then","response","updateCourse","history","push","material","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport {withRouter} from \"react-router-dom\";\n\nclass EditMaterialForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            keyName: '',\n            presentation: '',\n            measurementType: '',\n            dimensions: '',\n            quantityPresentation: '',\n            amountToRequest: '',\n            price: '',\n            supplier: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshCourses();\n    }\n\n    refreshCourses() {\n        //console.log(this.state.id)\n        const course = CourseDataService.retrieveCourse(this.state.id).then(\n            response=> this.setState({\n                name : response.name,\n                keyName: response.keyName,\n                presentation: response.presentation,\n                measurementType: response.measurementType,\n                dimensions: response.dimensions,\n                quantityPresentation: response.quantityPresentation,\n                amountToRequest: response.amountToRequest,\n                price: response.price,\n                supplier: response.supplier\n            })\n        )\n    }\n\n    onSubmit() {\n        //console.log(\"state \"+ this.state.name)\n        //console.log(\"state \"+ this.state.id)\n        CourseDataService.updateCourse(this.state.id, this.state)\n            .then(\n                response => {\n                    this.props.history.push(`/`)\n                    this.setState({ material: response.data })\n                }\n            )\n        //console.log(\"SSSSSS \"+ this.state.name)\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            ...this.state,\n            [name]: value\n        });\n        console.log(this.state)\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h3>UPDATE Materials</h3>\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <InputForm\n                            name=\"name\"\n                            label=\"name\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.state.name}\n                        />\n                        <InputForm\n                            name=\"keyName\"\n                            label=\"keyName\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.state.keyName}\n                        />\n                        <InputForm\n                            name=\"presentation\"\n                            label=\"presentation\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.state.presentation}\n                        />\n                        <InputForm\n                            name=\"measurementType\"\n                            label=\"measurementType\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.state.measurementType}\n                        />\n                        <InputForm\n                            name=\"dimensions\"\n                            label=\"dimensions\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.state.dimensions}\n                        />\n                        <InputForm\n                            name=\"quantityPresentation\"\n                            label=\"quantityPresentation\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.state.quantityPresentation}\n                        />\n                        <InputForm\n                            name=\"amountToRequest\"\n                            label=\"amountToRequest\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.state.amountToRequest}\n                        />\n                        <InputForm\n                            name=\"price\"\n                            label=\"price\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.state.price}\n                        />\n                        <InputForm\n                            name=\"supplier\"\n                            label=\"supplier\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.state.supplier}\n                        />\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.onSubmit}>Update</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter (EditMaterialForm)\n\n\n\n\n\n\n\n/*\nimport React, { Component } from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport {withRouter} from 'react-router-dom';\n\nclass EditMaterialForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            keyName: '',\n            specification: {\n                presentation: '',\n                measurementType: '',\n                dimensions: '',\n                quantityPresentation: '',\n                amountToRequest: '',\n                price: '',\n                supplier: ''\n            },\n            message: null\n        }\n    }\n\n    componentDidMount() {\n        const material = CourseDataService.retrieveCourse(this.props.match.params.id);\n        console.log('edit ... ' + material  )\n\n        this.setState({\n            name: material.name,\n            keyName: material.keyName,\n            specification: {\n                presentation: material.specification.presentation,\n                measurementType: material.specification.measurementType,\n                dimensions: material.specification.dimensions,\n                quantityPresentation: material.specification.quantityPresentation,\n                amountToRequest: material.specification.amountToRequest,\n                price: material.specification.price,\n                supplier: material.specification.supplier\n            }\n        })\n    }\n\n    updateCourseClicked() {\n        console.log(this.state)\n        CourseDataService.createCourse(this.state)\n            .then(\n                response => {\n                    //console.log(response);\n                    this.props.history.push(`/`)\n                    this.setState({ material: response.data })\n                }\n            )\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            ...this.state,\n            [name]: value\n        });\n        console.log(this.state)\n    };\n\n    handleSpecificationChange = event => {\n        const { value, name } = event.target;\n        const {specification} = this.state;\n        specification[name]=value;\n        this.setState({\n            ...this.state,\n            specification\n        });\n        console.log(this.state)\n    };\n\n    render()  {\n        console.log(this.props.match.params.id)\n        return (\n            <div className=\"container\">\n                <h3>Update Material</h3>\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <InputForm\n                            name=\"name\"\n                            label=\"name\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.name}\n                        />\n                        <InputForm\n                            name=\"keyName\"\n                            label=\"keyName\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.keyName}\n                        />\n                        <InputForm\n                            name=\"presentation\"\n                            label=\"presentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.presentation}\n                        />\n                        <InputForm\n                            name=\"measurementType\"\n                            label=\"measurementType\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.measurementType}\n                        />\n                        <InputForm\n                            name=\"dimensions\"\n                            label=\"dimensions\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.dimensions}\n                        />\n                        <InputForm\n                            name=\"quantityPresentation\"\n                            label=\"quantityPresentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.quantityPresentation}\n                        />\n                        <InputForm\n                            name=\"amountToRequest\"\n                            label=\"amountToRequest\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.amountToRequest}\n                        />\n                        <InputForm\n                            name=\"price\"\n                            label=\"price\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.price}\n                        />\n                        <InputForm\n                            name=\"supplier\"\n                            label=\"supplier\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.supplier}\n                        />\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.updateCourseClicked}>Update</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter (EditMaterialForm);\n\n\n\n\n    return (\n        <form\n            onSubmit={event => {\n                event.preventDefault()\n\n                props.updateMaterial(material.id, material)\n            }}\n        >\n\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" value={material.name} onChange={handleInputChange} />\n            <label>Key</label>\n            <input type=\"text\" name=\"username\" value={material.keyName} onChange={handleInputChange} />\n            <label>Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.presentation} onChange={handleInputChange} />\n            <label>Measurement</label>\n            <input type=\"text\" name=\"username\" value={material.measurementType} onChange={handleInputChange} />\n            <label>Dimensions</label>\n            <input type=\"text\" name=\"username\" value={material.dimensionsMaterial} onChange={handleInputChange} />\n            <label>Quantity - Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.quantityPresentation} onChange={handleInputChange} />\n            <label>Total Amount</label>\n            <input type=\"text\" name=\"username\" value={material.amountToRequest} onChange={handleInputChange} />\n            <label>Price</label>\n            <input type=\"text\" name=\"username\" value={material.price} onChange={handleInputChange} />\n            <label>Supplier</label>\n            <input type=\"text\" name=\"username\" value={material.supplier} onChange={handleInputChange} />\n\n            <button>Update material</button>\n            <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\n                Cancel\n            </button>\n        </form>\n    )\n}\n\nexport default EditMaterialForm*/\n"]},"metadata":{},"sourceType":"module"}