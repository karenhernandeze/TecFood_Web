{"ast":null,"code":"import React, { Component } from 'react';\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nclass EditMaterialForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      description: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id); // eslint-disable-next-line\n\n    if (this.state.id == -1) {\n      return;\n    }\n\n    CourseDataService.retrieveCourse(this.state.id).then(response => this.setState({\n      description: response.data.description\n    }));\n  }\n\n  onSubmit(values) {\n    let course = {\n      id: this.state.id,\n      description: values.description\n    };\n\n    if (this.state.id === -1) {\n      CourseDataService.createCourse(course).then(() => this.props.history.push('/'));\n    } else {\n      CourseDataService.updateCourse(this.state.id, course).then(() => this.props.history.push('/'));\n    }\n\n    console.log(values);\n  }\n  /*\n  constructor(props) {\n      super(props)\n      this.state = {\n          name: '',\n          keyName: '',\n          specification: {\n              presentation: '',\n              measurementType: '',\n              dimensions: '',\n              quantityPresentation: '',\n              amountToRequest: '',\n              price: '',\n              supplier: ''\n          },\n          message: null\n      }\n      this.addCourseClicked = this.addCourseClicked.bind(this)\n      this.refreshCourses = this.refreshCourses.bind(this)\n  }\n     componentDidMount() {\n      const {\n          match: { params }\n      } = this.props;\n      const id = this.props.match.params.id;\n      CourseDataService.retrieveCourse(id).then(\n          ({data: {id, material}}) => {\n              //console.log(\"MATERIAL\" + material.id);\n              this.setState({id, material});\n          }\n      )\n        const material = CourseDataService.retrieveCourse(this.props.match.params.id);\n      console.log('edit ... ' + material  )\n       this.setState({\n          name: material.name,\n          keyName: material.keyName,\n          specification: {\n              presentation: material.presentation,\n              measurementType: material.measurementType,\n              dimensions: material.dimensions,\n              quantityPresentation: material.quantityPresentation,\n              amountToRequest: material.amountToRequest,\n              price: material.price,\n              supplier: material.supplier\n          }\n      })\n  }\n   refreshCourses() {\n      CourseDataService.retrieveAllCourses()\n          .then(\n              response => {\n                  console.log(\"hello\" + response);\n                  this.setState({ materials: response.data })\n              }\n          )\n  }\n   refreshCourses() {\n      CourseDataService.retrieveCourse(this.props.match.params.id)\n          .then(\n              response => {\n                  console.log(response);\n                  console.log(response.data.name);\n                  console.log(response.data)\n                  this.setState({ materials: response.data })\n              }\n              )\n  }\n   addCourseClicked() {\n      CourseDataService.retrieveCourse(this.props.match.params.id).then(\n       )\n      CourseDataService.updateCourse(this.props.match.params.id, this.state)\n          .then(\n              response => {\n                  console.log(response);\n                  this.props.history.push(`/`)\n                  this.setState({ material: response.data })\n              }\n          )\n  }\n   handleChange = event => {\n      const { value, name } = event.target;\n      this.setState({\n          ...this.state,\n          [name]: value\n      });\n      console.log(this.state)\n  };\n   handleSpecificationChange = event => {\n      const { value, name } = event.target;\n      const {specification} = this.state;\n      specification[name]=value;\n      this.setState({\n          ...this.state,\n          specification\n      });\n  };\n    render() {\n      return (\n          <div className=\"container\">\n              <h3>Add Materials</h3>\n              {this.state.message && <div class=\"alert alert-success\">{this.state.message}</div>}\n              <div className=\"container\">\n                  <table className=\"table\">\n                      <InputForm\n                          name=\"name\"\n                          label=\"name\"\n                          type=\"text\"\n                          handleChange={this.handleChange}\n                          value={this.name}\n                      />\n                      <InputForm\n                          name=\"keyName\"\n                          label=\"keyName\"\n                          type=\"text\"\n                          handleChange={this.handleChange}\n                          value={this.keyName}\n                      />\n                      <InputForm\n                          name=\"presentation\"\n                          label=\"presentation\"\n                          type=\"text\"\n                          handleChange={this.handleSpecificationChange}\n                          value={this.presentation}\n                      />\n                      <InputForm\n                          name=\"measurementType\"\n                          label=\"measurementType\"\n                          type=\"text\"\n                          handleChange={this.handleSpecificationChange}\n                          value={this.measurementType}\n                      />\n                      <InputForm\n                          name=\"dimensions\"\n                          label=\"dimensions\"\n                          type=\"text\"\n                          handleChange={this.handleSpecificationChange}\n                          value={this.dimensions}\n                      />\n                      <InputForm\n                          name=\"quantityPresentation\"\n                          label=\"quantityPresentation\"\n                          type=\"text\"\n                          handleChange={this.handleSpecificationChange}\n                          value={this.quantityPresentation}\n                      />\n                      <InputForm\n                          name=\"amountToRequest\"\n                          label=\"amountToRequest\"\n                          type=\"text\"\n                          handleChange={this.handleSpecificationChange}\n                          value={this.amountToRequest}\n                      />\n                      <InputForm\n                          name=\"price\"\n                          label=\"price\"\n                          type=\"text\"\n                          handleChange={this.handleSpecificationChange}\n                          value={this.price}\n                      />\n                      <InputForm\n                          name=\"supplier\"\n                          label=\"supplier\"\n                          type=\"text\"\n                          handleChange={this.handleSpecificationChange}\n                          value={this.supplier}\n                      />\n                  </table>\n                  <div className=\"row\">\n                      <button className=\"btn btn-success\" onClick={this.addCourseClicked}>Add</button>\n                  </div>\n              </div>\n          </div>\n      )\n  }*/\n\n\n}\n\nexport default withRouter(EditMaterialForm);\n/*\nimport React, { Component } from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport {withRouter} from 'react-router-dom';\n\nclass EditMaterialForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            keyName: '',\n            specification: {\n                presentation: '',\n                measurementType: '',\n                dimensions: '',\n                quantityPresentation: '',\n                amountToRequest: '',\n                price: '',\n                supplier: ''\n            },\n            message: null\n        }\n    }\n\n    componentDidMount() {\n        const material = CourseDataService.retrieveCourse(this.props.match.params.id);\n        console.log('edit ... ' + material  )\n\n        this.setState({\n            name: material.name,\n            keyName: material.keyName,\n            specification: {\n                presentation: material.specification.presentation,\n                measurementType: material.specification.measurementType,\n                dimensions: material.specification.dimensions,\n                quantityPresentation: material.specification.quantityPresentation,\n                amountToRequest: material.specification.amountToRequest,\n                price: material.specification.price,\n                supplier: material.specification.supplier\n            }\n        })\n    }\n\n    updateCourseClicked() {\n        console.log(this.state)\n        CourseDataService.createCourse(this.state)\n            .then(\n                response => {\n                    //console.log(response);\n                    this.props.history.push(`/`)\n                    this.setState({ material: response.data })\n                }\n            )\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            ...this.state,\n            [name]: value\n        });\n        console.log(this.state)\n    };\n\n    handleSpecificationChange = event => {\n        const { value, name } = event.target;\n        const {specification} = this.state;\n        specification[name]=value;\n        this.setState({\n            ...this.state,\n            specification\n        });\n        console.log(this.state)\n    };\n\n    render()  {\n        console.log(this.props.match.params.id)\n        return (\n            <div className=\"container\">\n                <h3>Update Material</h3>\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <InputForm\n                            name=\"name\"\n                            label=\"name\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.name}\n                        />\n                        <InputForm\n                            name=\"keyName\"\n                            label=\"keyName\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.keyName}\n                        />\n                        <InputForm\n                            name=\"presentation\"\n                            label=\"presentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.presentation}\n                        />\n                        <InputForm\n                            name=\"measurementType\"\n                            label=\"measurementType\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.measurementType}\n                        />\n                        <InputForm\n                            name=\"dimensions\"\n                            label=\"dimensions\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.dimensions}\n                        />\n                        <InputForm\n                            name=\"quantityPresentation\"\n                            label=\"quantityPresentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.quantityPresentation}\n                        />\n                        <InputForm\n                            name=\"amountToRequest\"\n                            label=\"amountToRequest\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.amountToRequest}\n                        />\n                        <InputForm\n                            name=\"price\"\n                            label=\"price\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.price}\n                        />\n                        <InputForm\n                            name=\"supplier\"\n                            label=\"supplier\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.supplier}\n                        />\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.updateCourseClicked}>Update</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter (EditMaterialForm);\n\n\n\n\n    return (\n        <form\n            onSubmit={event => {\n                event.preventDefault()\n\n                props.updateMaterial(material.id, material)\n            }}\n        >\n\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" value={material.name} onChange={handleInputChange} />\n            <label>Key</label>\n            <input type=\"text\" name=\"username\" value={material.keyName} onChange={handleInputChange} />\n            <label>Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.presentation} onChange={handleInputChange} />\n            <label>Measurement</label>\n            <input type=\"text\" name=\"username\" value={material.measurementType} onChange={handleInputChange} />\n            <label>Dimensions</label>\n            <input type=\"text\" name=\"username\" value={material.dimensionsMaterial} onChange={handleInputChange} />\n            <label>Quantity - Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.quantityPresentation} onChange={handleInputChange} />\n            <label>Total Amount</label>\n            <input type=\"text\" name=\"username\" value={material.amountToRequest} onChange={handleInputChange} />\n            <label>Price</label>\n            <input type=\"text\" name=\"username\" value={material.price} onChange={handleInputChange} />\n            <label>Supplier</label>\n            <input type=\"text\" name=\"username\" value={material.supplier} onChange={handleInputChange} />\n\n            <button>Update material</button>\n            <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\n                Cancel\n            </button>\n        </form>\n    )\n}\n\nexport default EditMaterialForm*/","map":{"version":3,"sources":["/Users/ilsehernandez/material-app/src/forms/EditMaterialForm.js"],"names":["React","Component","CourseDataService","InputForm","withRouter","Formik","Form","Field","ErrorMessage","EditMaterialForm","constructor","props","state","id","match","params","description","onSubmit","bind","componentDidMount","console","log","retrieveCourse","then","response","setState","data","values","course","createCourse","history","push","updateCourse"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;;AAEA,MAAMC,gBAAN,SAA+BR,SAA/B,CAAyC;AACrCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EADnB;AAETG,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,EAAvB,EADgB,CAEhB;;AACA,QAAI,KAAKD,KAAL,CAAWC,EAAX,IAAiB,CAAC,CAAtB,EAAyB;AACrB;AACH;;AACDX,IAAAA,iBAAiB,CAACoB,cAAlB,CAAiC,KAAKV,KAAL,CAAWC,EAA5C,EACKU,IADL,CACUC,QAAQ,IAAI,KAAKC,QAAL,CAAc;AAC5BT,MAAAA,WAAW,EAAEQ,QAAQ,CAACE,IAAT,CAAcV;AADC,KAAd,CADtB;AAIH;;AAEDC,EAAAA,QAAQ,CAACU,MAAD,EAAS;AACb,QAAIC,MAAM,GAAG;AACTf,MAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EADN;AAETG,MAAAA,WAAW,EAAEW,MAAM,CAACX;AAFX,KAAb;;AAIA,QAAI,KAAKJ,KAAL,CAAWC,EAAX,KAAkB,CAAC,CAAvB,EAA0B;AACtBX,MAAAA,iBAAiB,CAAC2B,YAAlB,CAAgCD,MAAhC,EACKL,IADL,CACU,MAAM,KAAKZ,KAAL,CAAWmB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CADhB;AAEH,KAHD,MAGO;AACH7B,MAAAA,iBAAiB,CAAC8B,YAAlB,CAA+B,KAAKpB,KAAL,CAAWC,EAA1C,EAA8Ce,MAA9C,EACKL,IADL,CACU,MAAM,KAAKZ,KAAL,CAAWmB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB,CADhB;AAEH;;AACDX,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACH;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAvCqC;;AAqOzC,eAAevB,UAAU,CAAEK,gBAAF,CAAzB;AAQA","sourcesContent":["import React, { Component } from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport {withRouter} from \"react-router-dom\";\n\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nclass EditMaterialForm extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            description: ''\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentDidMount() {\n        console.log(this.state.id)\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n        CourseDataService.retrieveCourse(this.state.id)\n            .then(response => this.setState({\n                description: response.data.description\n            }))\n    }\n\n    onSubmit(values) {\n        let course = {\n            id: this.state.id,\n            description: values.description\n        }\n        if (this.state.id === -1) {\n            CourseDataService.createCourse( course)\n                .then(() => this.props.history.push('/'))\n        } else {\n            CourseDataService.updateCourse(this.state.id, course)\n                .then(() => this.props.history.push('/'))\n        }\n        console.log(values);\n    }\n\n\n    /*\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            keyName: '',\n            specification: {\n                presentation: '',\n                measurementType: '',\n                dimensions: '',\n                quantityPresentation: '',\n                amountToRequest: '',\n                price: '',\n                supplier: ''\n            },\n            message: null\n        }\n        this.addCourseClicked = this.addCourseClicked.bind(this)\n        this.refreshCourses = this.refreshCourses.bind(this)\n    }\n\n\n\n    componentDidMount() {\n        const {\n            match: { params }\n        } = this.props;\n        const id = this.props.match.params.id;\n        CourseDataService.retrieveCourse(id).then(\n            ({data: {id, material}}) => {\n                //console.log(\"MATERIAL\" + material.id);\n                this.setState({id, material});\n            }\n        )\n\n\n        const material = CourseDataService.retrieveCourse(this.props.match.params.id);\n        console.log('edit ... ' + material  )\n\n        this.setState({\n            name: material.name,\n            keyName: material.keyName,\n            specification: {\n                presentation: material.presentation,\n                measurementType: material.measurementType,\n                dimensions: material.dimensions,\n                quantityPresentation: material.quantityPresentation,\n                amountToRequest: material.amountToRequest,\n                price: material.price,\n                supplier: material.supplier\n            }\n        })\n    }\n\n    refreshCourses() {\n        CourseDataService.retrieveAllCourses()\n            .then(\n                response => {\n                    console.log(\"hello\" + response);\n                    this.setState({ materials: response.data })\n                }\n            )\n    }\n\n    refreshCourses() {\n        CourseDataService.retrieveCourse(this.props.match.params.id)\n            .then(\n                response => {\n                    console.log(response);\n                    console.log(response.data.name);\n                    console.log(response.data)\n                    this.setState({ materials: response.data })\n                }\n                )\n    }\n\n    addCourseClicked() {\n        CourseDataService.retrieveCourse(this.props.match.params.id).then(\n\n        )\n        CourseDataService.updateCourse(this.props.match.params.id, this.state)\n            .then(\n                response => {\n                    console.log(response);\n                    this.props.history.push(`/`)\n                    this.setState({ material: response.data })\n                }\n            )\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            ...this.state,\n            [name]: value\n        });\n        console.log(this.state)\n    };\n\n    handleSpecificationChange = event => {\n        const { value, name } = event.target;\n        const {specification} = this.state;\n        specification[name]=value;\n        this.setState({\n            ...this.state,\n            specification\n        });\n    };\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h3>Add Materials</h3>\n                {this.state.message && <div class=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <InputForm\n                            name=\"name\"\n                            label=\"name\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.name}\n                        />\n                        <InputForm\n                            name=\"keyName\"\n                            label=\"keyName\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.keyName}\n                        />\n                        <InputForm\n                            name=\"presentation\"\n                            label=\"presentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.presentation}\n                        />\n                        <InputForm\n                            name=\"measurementType\"\n                            label=\"measurementType\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.measurementType}\n                        />\n                        <InputForm\n                            name=\"dimensions\"\n                            label=\"dimensions\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.dimensions}\n                        />\n                        <InputForm\n                            name=\"quantityPresentation\"\n                            label=\"quantityPresentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.quantityPresentation}\n                        />\n                        <InputForm\n                            name=\"amountToRequest\"\n                            label=\"amountToRequest\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.amountToRequest}\n                        />\n                        <InputForm\n                            name=\"price\"\n                            label=\"price\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.price}\n                        />\n                        <InputForm\n                            name=\"supplier\"\n                            label=\"supplier\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.supplier}\n                        />\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.addCourseClicked}>Add</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }*/\n}\n\nexport default withRouter (EditMaterialForm)\n\n\n\n\n\n\n\n/*\nimport React, { Component } from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport {withRouter} from 'react-router-dom';\n\nclass EditMaterialForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            keyName: '',\n            specification: {\n                presentation: '',\n                measurementType: '',\n                dimensions: '',\n                quantityPresentation: '',\n                amountToRequest: '',\n                price: '',\n                supplier: ''\n            },\n            message: null\n        }\n    }\n\n    componentDidMount() {\n        const material = CourseDataService.retrieveCourse(this.props.match.params.id);\n        console.log('edit ... ' + material  )\n\n        this.setState({\n            name: material.name,\n            keyName: material.keyName,\n            specification: {\n                presentation: material.specification.presentation,\n                measurementType: material.specification.measurementType,\n                dimensions: material.specification.dimensions,\n                quantityPresentation: material.specification.quantityPresentation,\n                amountToRequest: material.specification.amountToRequest,\n                price: material.specification.price,\n                supplier: material.specification.supplier\n            }\n        })\n    }\n\n    updateCourseClicked() {\n        console.log(this.state)\n        CourseDataService.createCourse(this.state)\n            .then(\n                response => {\n                    //console.log(response);\n                    this.props.history.push(`/`)\n                    this.setState({ material: response.data })\n                }\n            )\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            ...this.state,\n            [name]: value\n        });\n        console.log(this.state)\n    };\n\n    handleSpecificationChange = event => {\n        const { value, name } = event.target;\n        const {specification} = this.state;\n        specification[name]=value;\n        this.setState({\n            ...this.state,\n            specification\n        });\n        console.log(this.state)\n    };\n\n    render()  {\n        console.log(this.props.match.params.id)\n        return (\n            <div className=\"container\">\n                <h3>Update Material</h3>\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <InputForm\n                            name=\"name\"\n                            label=\"name\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.name}\n                        />\n                        <InputForm\n                            name=\"keyName\"\n                            label=\"keyName\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.keyName}\n                        />\n                        <InputForm\n                            name=\"presentation\"\n                            label=\"presentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.presentation}\n                        />\n                        <InputForm\n                            name=\"measurementType\"\n                            label=\"measurementType\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.measurementType}\n                        />\n                        <InputForm\n                            name=\"dimensions\"\n                            label=\"dimensions\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.dimensions}\n                        />\n                        <InputForm\n                            name=\"quantityPresentation\"\n                            label=\"quantityPresentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.quantityPresentation}\n                        />\n                        <InputForm\n                            name=\"amountToRequest\"\n                            label=\"amountToRequest\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.amountToRequest}\n                        />\n                        <InputForm\n                            name=\"price\"\n                            label=\"price\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.price}\n                        />\n                        <InputForm\n                            name=\"supplier\"\n                            label=\"supplier\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.supplier}\n                        />\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.updateCourseClicked}>Update</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter (EditMaterialForm);\n\n\n\n\n    return (\n        <form\n            onSubmit={event => {\n                event.preventDefault()\n\n                props.updateMaterial(material.id, material)\n            }}\n        >\n\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" value={material.name} onChange={handleInputChange} />\n            <label>Key</label>\n            <input type=\"text\" name=\"username\" value={material.keyName} onChange={handleInputChange} />\n            <label>Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.presentation} onChange={handleInputChange} />\n            <label>Measurement</label>\n            <input type=\"text\" name=\"username\" value={material.measurementType} onChange={handleInputChange} />\n            <label>Dimensions</label>\n            <input type=\"text\" name=\"username\" value={material.dimensionsMaterial} onChange={handleInputChange} />\n            <label>Quantity - Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.quantityPresentation} onChange={handleInputChange} />\n            <label>Total Amount</label>\n            <input type=\"text\" name=\"username\" value={material.amountToRequest} onChange={handleInputChange} />\n            <label>Price</label>\n            <input type=\"text\" name=\"username\" value={material.price} onChange={handleInputChange} />\n            <label>Supplier</label>\n            <input type=\"text\" name=\"username\" value={material.supplier} onChange={handleInputChange} />\n\n            <button>Update material</button>\n            <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\n                Cancel\n            </button>\n        </form>\n    )\n}\n\nexport default EditMaterialForm*/\n"]},"metadata":{},"sourceType":"module"}