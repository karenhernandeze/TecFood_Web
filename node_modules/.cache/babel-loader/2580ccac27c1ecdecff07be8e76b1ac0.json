{"ast":null,"code":"var _jsxFileName = \"/Users/ilsehernandez/material-app/src/forms/EditMaterialForm.js\";\nimport React, { Component } from 'react';\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport { withRouter } from \"react-router-dom\";\n\nclass EditMaterialForm extends Component {\n  /*\n  stateMat (){\n      const id = this.props.match.params.id;\n       CourseDataService.retrieveCourse(id)\n          .then(\n              response => {\n                  console.log(response);\n                  this.setState({ material: response.data })\n              }\n          )\n  }*/\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      keyName: '',\n      specification: {\n        presentation: '',\n        measurementType: '',\n        dimensions: '',\n        quantityPresentation: '',\n        amountToRequest: '',\n        price: '',\n        supplier: ''\n      }\n    };\n    this.onSubmit = this.onSubmit.bind(this); //   this.stateMat();\n\n    console.log(\"LOOOG\" + this.name); //this.addCourseClicked = this.addCourseClicked.bind(this)\n  }\n\n  componentDidMount() {\n    console.log(this.state.id);\n    /*\n    const {\n        match: { params }\n    } = this.props;*/\n\n    CourseDataService.retrieveCourse(this.state.id).then(response => this.setState({\n      //              description: response.data.description,\n      name: response.name,\n      keyName: response.keyName,\n      specification: {\n        presentation: response.presentation,\n        measurementType: response.measurementType,\n        dimensions: response.dimensions,\n        quantityPresentation: response.quantityPresentation,\n        amountToRequest: response.amountToRequest,\n        price: response.price,\n        supplier: response.supplier\n      }\n    }));\n    console.log(\"name  \" + this.name);\n    console.log(\"SPECIFICATIONNNNN  :: \" + this.state.presentation);\n  }\n\n  onSubmit(values) {\n    let material = {\n      id: this.state.id,\n      description: values.description,\n      name: values.name,\n      keyName: values.keyName,\n      specification: {\n        presentation: values.presentation,\n        measurementType: values.measurementType,\n        dimensions: values.dimensions,\n        quantityPresentation: values.quantityPresentation,\n        amountToRequest: values.amountToRequest,\n        price: values.price,\n        supplier: values.supplier\n      }\n    };\n    CourseDataService.updateCourse(this.state.id, material).then(() => this.props.history.push('/'));\n    console.log(\"values    \" + values);\n  }\n  /*\n  refreshCourses() {\n      CourseDataService.retrieveCourse(this.props.match.params.id)\n          .then(\n              response => {\n                  console.log(response);\n                  console.log(response.data.name);\n                  console.log(response.data)\n                  this.setState({ materials: response.data })\n              }\n              )\n  }*/\n\n  /*\n      addCourseClicked() {\n          CourseDataService.updateCourse(this.props.match.params.id, this.state)\n              .then(\n                  response => {\n                      console.log(\"update \" + response);\n                      this.props.history.push(`/`)\n                      this.setState({ material: response.data })\n                  }\n              )\n      }\n  \n      handleChange = event => {\n          const { value, name } = event.target;\n          //setMaterial({...material, [name]: value})\n          /*\n          this.setState({\n              ...this.state,\n              [name]: value\n          });\n          console.log(this.state)\n      };\n  \n      handleSpecificationChange = event => {\n          const { value, name } = event.target;\n          const {specification} = this.state;\n          specification[name]=value;\n          this.setState({\n              ...this.state,\n              specification\n          });\n      };\n  \n  \n      presentation: values.presentation,\n              measurementType: values.measurementType,\n              dimensions: values.dimensions,\n              quantityPresentation: values.quantityPresentation,\n              amountToRequest: values.amountToRequest,\n              price: values.price,\n              supplier: values.supplier\n   */\n\n\n  render() {\n    let {\n      keyName,\n      name,\n      specification,\n      id\n    } = this.state;\n    console.log(this.state.name);\n    console.log(\"KEY NAME \" + this.state.keyName);\n    console.log(this.state.specification.presentation);\n    console.log(this.state.specification.dimensions);\n    console.log(this.state.specification.quantityPresentation);\n    console.log(this.state.specification.amountToRequest);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Add Materials\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      name: \"name\",\n      label: \"name\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"keyName\",\n      label: \"keyName\",\n      type: \"text\",\n      handleChange: this.state.handleChange,\n      value: this.state.keyName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"presentation\",\n      label: \"presentation\",\n      type: \"text\",\n      handleChange: this.handleSpecificationChange,\n      value: this.state.presentation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"measurementType\",\n      label: \"measurementType\",\n      type: \"text\",\n      handleChange: this.handleSpecificationChange,\n      value: this.state.measurementType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"dimensions\",\n      label: \"dimensions\",\n      type: \"text\",\n      handleChange: this.handleSpecificationChange,\n      value: this.state.dimensions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"quantityPresentation\",\n      label: \"quantityPresentation\",\n      type: \"text\",\n      handleChange: this.handleSpecificationChange,\n      value: this.state.quantityPresentation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"amountToRequest\",\n      label: \"amountToRequest\",\n      type: \"text\",\n      handleChange: this.handleSpecificationChange,\n      value: this.state.amountToRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"price\",\n      label: \"price\",\n      type: \"text\",\n      handleChange: this.handleSpecificationChange,\n      value: this.state.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"supplier\",\n      label: \"supplier\",\n      type: \"text\",\n      handleChange: this.handleSpecificationChange,\n      value: this.state.supplier,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default withRouter(EditMaterialForm);\n/*\nimport React, { Component } from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport {withRouter} from 'react-router-dom';\n\nclass EditMaterialForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            keyName: '',\n            specification: {\n                presentation: '',\n                measurementType: '',\n                dimensions: '',\n                quantityPresentation: '',\n                amountToRequest: '',\n                price: '',\n                supplier: ''\n            },\n            message: null\n        }\n    }\n\n    componentDidMount() {\n        const material = CourseDataService.retrieveCourse(this.props.match.params.id);\n        console.log('edit ... ' + material  )\n\n        this.setState({\n            name: material.name,\n            keyName: material.keyName,\n            specification: {\n                presentation: material.specification.presentation,\n                measurementType: material.specification.measurementType,\n                dimensions: material.specification.dimensions,\n                quantityPresentation: material.specification.quantityPresentation,\n                amountToRequest: material.specification.amountToRequest,\n                price: material.specification.price,\n                supplier: material.specification.supplier\n            }\n        })\n    }\n\n    updateCourseClicked() {\n        console.log(this.state)\n        CourseDataService.createCourse(this.state)\n            .then(\n                response => {\n                    //console.log(response);\n                    this.props.history.push(`/`)\n                    this.setState({ material: response.data })\n                }\n            )\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            ...this.state,\n            [name]: value\n        });\n        console.log(this.state)\n    };\n\n    handleSpecificationChange = event => {\n        const { value, name } = event.target;\n        const {specification} = this.state;\n        specification[name]=value;\n        this.setState({\n            ...this.state,\n            specification\n        });\n        console.log(this.state)\n    };\n\n    render()  {\n        console.log(this.props.match.params.id)\n        return (\n            <div className=\"container\">\n                <h3>Update Material</h3>\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <InputForm\n                            name=\"name\"\n                            label=\"name\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.name}\n                        />\n                        <InputForm\n                            name=\"keyName\"\n                            label=\"keyName\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.keyName}\n                        />\n                        <InputForm\n                            name=\"presentation\"\n                            label=\"presentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.presentation}\n                        />\n                        <InputForm\n                            name=\"measurementType\"\n                            label=\"measurementType\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.measurementType}\n                        />\n                        <InputForm\n                            name=\"dimensions\"\n                            label=\"dimensions\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.dimensions}\n                        />\n                        <InputForm\n                            name=\"quantityPresentation\"\n                            label=\"quantityPresentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.quantityPresentation}\n                        />\n                        <InputForm\n                            name=\"amountToRequest\"\n                            label=\"amountToRequest\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.amountToRequest}\n                        />\n                        <InputForm\n                            name=\"price\"\n                            label=\"price\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.price}\n                        />\n                        <InputForm\n                            name=\"supplier\"\n                            label=\"supplier\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.supplier}\n                        />\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.updateCourseClicked}>Update</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter (EditMaterialForm);\n\n\n\n\n    return (\n        <form\n            onSubmit={event => {\n                event.preventDefault()\n\n                props.updateMaterial(material.id, material)\n            }}\n        >\n\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" value={material.name} onChange={handleInputChange} />\n            <label>Key</label>\n            <input type=\"text\" name=\"username\" value={material.keyName} onChange={handleInputChange} />\n            <label>Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.presentation} onChange={handleInputChange} />\n            <label>Measurement</label>\n            <input type=\"text\" name=\"username\" value={material.measurementType} onChange={handleInputChange} />\n            <label>Dimensions</label>\n            <input type=\"text\" name=\"username\" value={material.dimensionsMaterial} onChange={handleInputChange} />\n            <label>Quantity - Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.quantityPresentation} onChange={handleInputChange} />\n            <label>Total Amount</label>\n            <input type=\"text\" name=\"username\" value={material.amountToRequest} onChange={handleInputChange} />\n            <label>Price</label>\n            <input type=\"text\" name=\"username\" value={material.price} onChange={handleInputChange} />\n            <label>Supplier</label>\n            <input type=\"text\" name=\"username\" value={material.supplier} onChange={handleInputChange} />\n\n            <button>Update material</button>\n            <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\n                Cancel\n            </button>\n        </form>\n    )\n}\n\nexport default EditMaterialForm*/","map":{"version":3,"sources":["/Users/ilsehernandez/material-app/src/forms/EditMaterialForm.js"],"names":["React","Component","CourseDataService","InputForm","withRouter","EditMaterialForm","constructor","props","state","id","match","params","name","keyName","specification","presentation","measurementType","dimensions","quantityPresentation","amountToRequest","price","supplier","onSubmit","bind","console","log","componentDidMount","retrieveCourse","then","response","setState","values","material","description","updateCourse","history","push","render","handleChange","handleSpecificationChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport {withRouter} from \"react-router-dom\";\n\nclass EditMaterialForm extends Component {\n\n    /*\n    stateMat (){\n        const id = this.props.match.params.id;\n\n        CourseDataService.retrieveCourse(id)\n            .then(\n                response => {\n                    console.log(response);\n                    this.setState({ material: response.data })\n                }\n            )\n    }*/\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: this.props.match.params.id,\n            name: '',\n            keyName: '',\n            specification: {\n                presentation: '',\n                measurementType: '',\n                dimensions: '',\n                quantityPresentation: '',\n                amountToRequest: '',\n                price: '',\n                supplier: ''\n            }\n        }\n         this.onSubmit = this.onSubmit.bind(this)\n         //   this.stateMat();\n        console.log(\"LOOOG\" + this.name)\n        //this.addCourseClicked = this.addCourseClicked.bind(this)\n    }\n\n    componentDidMount() {\n        console.log(this.state.id)\n        /*\n        const {\n            match: { params }\n        } = this.props;*/\n        CourseDataService.retrieveCourse(this.state.id).then(\n            response=> this.setState({\n  //              description: response.data.description,\n                name : response.name,\n                keyName: response.keyName,\n                specification: {\n                    presentation: response.presentation,\n                    measurementType: response.measurementType,\n                    dimensions: response.dimensions,\n                    quantityPresentation: response.quantityPresentation,\n                    amountToRequest: response.amountToRequest,\n                    price: response.price,\n                    supplier: response.supplier\n                }\n            })\n        )\n\n        console.log(\"name  \"+this.name)\n        console.log(\"SPECIFICATIONNNNN  :: \"+ this.state.presentation)\n    }\n\n    onSubmit(values){\n        let material = {\n            id: this.state.id,\n            description: values.description,\n            name: values.name,\n            keyName: values.keyName,\n            specification:{\n                presentation: values.presentation,\n                measurementType: values.measurementType,\n                dimensions: values.dimensions,\n                quantityPresentation: values.quantityPresentation,\n                amountToRequest: values.amountToRequest,\n                price: values.price,\n                supplier: values.supplier\n            }\n        }\n\n        CourseDataService.updateCourse(this.state.id, material).then(\n            ()=>this.props.history.push('/')\n        )\n        console.log(\"values    \"+values);\n    }\n    /*\n    refreshCourses() {\n        CourseDataService.retrieveCourse(this.props.match.params.id)\n            .then(\n                response => {\n                    console.log(response);\n                    console.log(response.data.name);\n                    console.log(response.data)\n                    this.setState({ materials: response.data })\n                }\n                )\n    }*/\n/*\n    addCourseClicked() {\n        CourseDataService.updateCourse(this.props.match.params.id, this.state)\n            .then(\n                response => {\n                    console.log(\"update \" + response);\n                    this.props.history.push(`/`)\n                    this.setState({ material: response.data })\n                }\n            )\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n        //setMaterial({...material, [name]: value})\n        /*\n        this.setState({\n            ...this.state,\n            [name]: value\n        });\n        console.log(this.state)\n    };\n\n    handleSpecificationChange = event => {\n        const { value, name } = event.target;\n        const {specification} = this.state;\n        specification[name]=value;\n        this.setState({\n            ...this.state,\n            specification\n        });\n    };\n\n\n    presentation: values.presentation,\n            measurementType: values.measurementType,\n            dimensions: values.dimensions,\n            quantityPresentation: values.quantityPresentation,\n            amountToRequest: values.amountToRequest,\n            price: values.price,\n            supplier: values.supplier\n */\n \n    render() {\n        let { keyName, name, specification, id } = this.state\n        console.log(this.state.name)\n        console.log(\"KEY NAME \" + this.state.keyName)\n        console.log(this.state.specification.presentation)\n        console.log(this.state.specification.dimensions)\n        console.log(this.state.specification.quantityPresentation)\n        console.log(this.state.specification.amountToRequest)\n        return (\n            <div className=\"container\">\n                <h3>Add Materials</h3>\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <InputForm\n                            name=\"name\"\n                            label=\"name\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.state.name}\n                        />\n                        <InputForm\n                            name=\"keyName\"\n                            label=\"keyName\"\n                            type=\"text\"\n                            handleChange={this.state.handleChange}\n                            value={this.state.keyName}\n                        />\n                        <InputForm\n                            name=\"presentation\"\n                            label=\"presentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.state.presentation}\n                        />\n                        <InputForm\n                            name=\"measurementType\"\n                            label=\"measurementType\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.state.measurementType}\n                        />\n                        <InputForm\n                            name=\"dimensions\"\n                            label=\"dimensions\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.state.dimensions}\n                        />\n                        <InputForm\n                            name=\"quantityPresentation\"\n                            label=\"quantityPresentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.state.quantityPresentation}\n                        />\n                        <InputForm\n                            name=\"amountToRequest\"\n                            label=\"amountToRequest\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.state.amountToRequest}\n                        />\n                        <InputForm\n                            name=\"price\"\n                            label=\"price\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.state.price}\n                        />\n                        <InputForm\n                            name=\"supplier\"\n                            label=\"supplier\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.state.supplier}\n                        />\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter (EditMaterialForm)\n\n\n\n\n\n\n\n/*\nimport React, { Component } from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\nimport {withRouter} from 'react-router-dom';\n\nclass EditMaterialForm extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            keyName: '',\n            specification: {\n                presentation: '',\n                measurementType: '',\n                dimensions: '',\n                quantityPresentation: '',\n                amountToRequest: '',\n                price: '',\n                supplier: ''\n            },\n            message: null\n        }\n    }\n\n    componentDidMount() {\n        const material = CourseDataService.retrieveCourse(this.props.match.params.id);\n        console.log('edit ... ' + material  )\n\n        this.setState({\n            name: material.name,\n            keyName: material.keyName,\n            specification: {\n                presentation: material.specification.presentation,\n                measurementType: material.specification.measurementType,\n                dimensions: material.specification.dimensions,\n                quantityPresentation: material.specification.quantityPresentation,\n                amountToRequest: material.specification.amountToRequest,\n                price: material.specification.price,\n                supplier: material.specification.supplier\n            }\n        })\n    }\n\n    updateCourseClicked() {\n        console.log(this.state)\n        CourseDataService.createCourse(this.state)\n            .then(\n                response => {\n                    //console.log(response);\n                    this.props.history.push(`/`)\n                    this.setState({ material: response.data })\n                }\n            )\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            ...this.state,\n            [name]: value\n        });\n        console.log(this.state)\n    };\n\n    handleSpecificationChange = event => {\n        const { value, name } = event.target;\n        const {specification} = this.state;\n        specification[name]=value;\n        this.setState({\n            ...this.state,\n            specification\n        });\n        console.log(this.state)\n    };\n\n    render()  {\n        console.log(this.props.match.params.id)\n        return (\n            <div className=\"container\">\n                <h3>Update Material</h3>\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <InputForm\n                            name=\"name\"\n                            label=\"name\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.name}\n                        />\n                        <InputForm\n                            name=\"keyName\"\n                            label=\"keyName\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.keyName}\n                        />\n                        <InputForm\n                            name=\"presentation\"\n                            label=\"presentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.presentation}\n                        />\n                        <InputForm\n                            name=\"measurementType\"\n                            label=\"measurementType\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.measurementType}\n                        />\n                        <InputForm\n                            name=\"dimensions\"\n                            label=\"dimensions\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.dimensions}\n                        />\n                        <InputForm\n                            name=\"quantityPresentation\"\n                            label=\"quantityPresentation\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.quantityPresentation}\n                        />\n                        <InputForm\n                            name=\"amountToRequest\"\n                            label=\"amountToRequest\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.amountToRequest}\n                        />\n                        <InputForm\n                            name=\"price\"\n                            label=\"price\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.price}\n                        />\n                        <InputForm\n                            name=\"supplier\"\n                            label=\"supplier\"\n                            type=\"text\"\n                            handleChange={this.handleSpecificationChange}\n                            value={this.supplier}\n                        />\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.updateCourseClicked}>Update</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter (EditMaterialForm);\n\n\n\n\n    return (\n        <form\n            onSubmit={event => {\n                event.preventDefault()\n\n                props.updateMaterial(material.id, material)\n            }}\n        >\n\n            <label>Name</label>\n            <input type=\"text\" name=\"name\" value={material.name} onChange={handleInputChange} />\n            <label>Key</label>\n            <input type=\"text\" name=\"username\" value={material.keyName} onChange={handleInputChange} />\n            <label>Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.presentation} onChange={handleInputChange} />\n            <label>Measurement</label>\n            <input type=\"text\" name=\"username\" value={material.measurementType} onChange={handleInputChange} />\n            <label>Dimensions</label>\n            <input type=\"text\" name=\"username\" value={material.dimensionsMaterial} onChange={handleInputChange} />\n            <label>Quantity - Presentation</label>\n            <input type=\"text\" name=\"username\" value={material.quantityPresentation} onChange={handleInputChange} />\n            <label>Total Amount</label>\n            <input type=\"text\" name=\"username\" value={material.amountToRequest} onChange={handleInputChange} />\n            <label>Price</label>\n            <input type=\"text\" name=\"username\" value={material.price} onChange={handleInputChange} />\n            <label>Supplier</label>\n            <input type=\"text\" name=\"username\" value={material.supplier} onChange={handleInputChange} />\n\n            <button>Update material</button>\n            <button onClick={() => props.setEditing(false)} className=\"button muted-button\">\n                Cancel\n            </button>\n        </form>\n    )\n}\n\nexport default EditMaterialForm*/\n"]},"metadata":{},"sourceType":"module"}