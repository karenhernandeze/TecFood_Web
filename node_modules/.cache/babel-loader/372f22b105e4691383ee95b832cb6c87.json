{"ast":null,"code":"import React, { Component, useState } from 'react';\nimport CourseDataService from \"../service/CourseDataService\";\n\nclass AddMaterialForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      idMat: null,\n      name: '',\n      keyName: '',\n      specification: {\n        presentation: '',\n        measurementType: '',\n        dimensions: '',\n        quantityPresentation: '',\n        amountToRequest: '',\n        price: '',\n        supplier: ''\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.refreshCourses();\n  }\n\n  refreshesCourses() {\n    CourseDataService.retrieveAllCourses().then(response => {\n      //console.log(response);\n      this.setState({\n        materials: response.data\n      });\n    });\n  }\n\n  saveCourseClicked(material) {\n    CourseDataService.createCourse(this.material).then(response => {\n      this.setState({\n        message: 'added'\n      });\n      this.refreshesCourses();\n    });\n  }\n\n}\n/*\nimport React, {Component, useState} from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\n\nclass AddMaterialForm extends Component{\n    state = {\n        idMat: null,\n        name: '',\n        keyName: '',\n        specification: {\n            presentation: '',\n            measurementType: '',\n            dimensions: '',\n            quantityPresentation: '',\n            amountToRequest: '',\n            price: '',\n            supplier: ''\n        }\n    }\n\n    componentDidMount() {\n        const [material, setMaterial] = useState(state)\n\n        const handleInputChange = event => {\n            const {name, value} = event.target\n            setMaterial({...material, [name]: value})\n        }\n    }\n\n    render(){\n        return (\n            <form\n                addMaterial = {\n                    CourseDataService.createCourse(this)\n                        .then(\n                            response => {\n                                this.setState({ message: `added` })\n                                this.refreshCourses()\n                            }\n                        )\n                }\n\n            >\n                <label>Name</label>\n                <input type=\"text\" name=\"name\" field={material.name} onChange={handleInputChange} />\n                <label>Key</label>\n                <input type=\"text\" name=\"keyName\" field={material.keyName} onChange={handleInputChange} />\n                <label>Presentation</label>\n                <input type=\"text\" name=\"presentation\" field={material.specification.presentation} onChange={handleInputChange} />\n                <label>Measurement</label>\n                <input type=\"text\" name=\"measurementType\" field={material.specification.measurementType} onChange={handleInputChange} />\n                <label>Dimensions</label>\n                <input type=\"text\" name=\"dimensions\" field={material.specification.dimensions} onChange={handleInputChange} />\n                <label>Quantity - Presentation</label>\n                <input type=\"text\" name=\"quantityPresentation\" field={material.specification.quantityPresentation} onChange={handleInputChange} />\n                <label>Total Amount</label>\n                <input type=\"text\" name=\"amountToRequest\" field={material.specification.amountToRequest} onChange={handleInputChange} />\n                <label>Price</label>\n                <input type=\"text\" name=\"price\" field={material.specification.price} onChange={handleInputChange} />\n                <label>Supplier</label>\n                <input type=\"text\" name=\"supplier\" field={material.specification.supplier} onChange={handleInputChange} />\n                <td><button className=\"btn btn-warning\" onClick={() => this.addMaterial (material.idMat)}>Add new material</button></td>\n            </form>\n        )\n    }\n\n\n}\n\n\nexport default AddMaterialForm\n\n*/","map":{"version":3,"sources":["/Users/ilsehernandez/material-app/src/forms/AddMaterialForm.js"],"names":["React","Component","useState","CourseDataService","AddMaterialForm","constructor","props","state","idMat","name","keyName","specification","presentation","measurementType","dimensions","quantityPresentation","amountToRequest","price","supplier","componentDidMount","refreshCourses","refreshesCourses","retrieveAllCourses","then","response","setState","materials","data","saveCourseClicked","material","createCourse","message"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACpCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AACRC,MAAAA,KAAK,EAAE,IADC;AAERC,MAAAA,IAAI,EAAE,EAFE;AAGRC,MAAAA,OAAO,EAAE,EAHD;AAIRC,MAAAA,aAAa,EAAE;AACXC,QAAAA,YAAY,EAAE,EADH;AAEXC,QAAAA,eAAe,EAAE,EAFN;AAGXC,QAAAA,UAAU,EAAE,EAHD;AAIXC,QAAAA,oBAAoB,EAAE,EAJX;AAKXC,QAAAA,eAAe,EAAE,EALN;AAMXC,QAAAA,KAAK,EAAE,EANI;AAOXC,QAAAA,QAAQ,EAAE;AAPC;AAJP,KAAZ;AAcH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,cAAL;AACH;;AAEDC,EAAAA,gBAAgB,GAAE;AACdlB,IAAAA,iBAAiB,CAACmB,kBAAlB,GACKC,IADL,CAEQC,QAAQ,IAAI;AACR;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEF,QAAQ,CAACG;AAAtB,OAAd;AACH,KALT;AAOH;;AAEDC,EAAAA,iBAAiB,CAACC,QAAD,EAAU;AACvB1B,IAAAA,iBAAiB,CAAC2B,YAAlB,CAA+B,KAAKD,QAApC,EACKN,IADL,CAEQC,QAAQ,IAAI;AACR,WAAKC,QAAL,CAAc;AAACM,QAAAA,OAAO,EAAE;AAAV,OAAd;AACA,WAAKV,gBAAL;AACH,KALT;AAOH;;AAzCmC;AAgDxC","sourcesContent":["import React, {Component, useState} from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\n\nclass AddMaterialForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state ={\n            idMat: null,\n            name: '',\n            keyName: '',\n            specification: {\n                presentation: '',\n                measurementType: '',\n                dimensions: '',\n                quantityPresentation: '',\n                amountToRequest: '',\n                price: '',\n                supplier: ''\n            }\n        }\n    }\n\n    componentDidMount() {\n        this.refreshCourses();\n    }\n\n    refreshesCourses(){\n        CourseDataService.retrieveAllCourses()\n            .then(\n                response => {\n                    //console.log(response);\n                    this.setState({ materials: response.data })\n                }\n            )\n    }\n\n    saveCourseClicked(material){\n        CourseDataService.createCourse(this.material)\n            .then(\n                response => {\n                    this.setState({message: 'added'})\n                    this.refreshesCourses()\n                }\n            )\n    }\n\n\n\n}\n\n\n/*\nimport React, {Component, useState} from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\n\nclass AddMaterialForm extends Component{\n    state = {\n        idMat: null,\n        name: '',\n        keyName: '',\n        specification: {\n            presentation: '',\n            measurementType: '',\n            dimensions: '',\n            quantityPresentation: '',\n            amountToRequest: '',\n            price: '',\n            supplier: ''\n        }\n    }\n\n    componentDidMount() {\n        const [material, setMaterial] = useState(state)\n\n        const handleInputChange = event => {\n            const {name, value} = event.target\n            setMaterial({...material, [name]: value})\n        }\n    }\n\n    render(){\n        return (\n            <form\n                addMaterial = {\n                    CourseDataService.createCourse(this)\n                        .then(\n                            response => {\n                                this.setState({ message: `added` })\n                                this.refreshCourses()\n                            }\n                        )\n                }\n\n            >\n                <label>Name</label>\n                <input type=\"text\" name=\"name\" field={material.name} onChange={handleInputChange} />\n                <label>Key</label>\n                <input type=\"text\" name=\"keyName\" field={material.keyName} onChange={handleInputChange} />\n                <label>Presentation</label>\n                <input type=\"text\" name=\"presentation\" field={material.specification.presentation} onChange={handleInputChange} />\n                <label>Measurement</label>\n                <input type=\"text\" name=\"measurementType\" field={material.specification.measurementType} onChange={handleInputChange} />\n                <label>Dimensions</label>\n                <input type=\"text\" name=\"dimensions\" field={material.specification.dimensions} onChange={handleInputChange} />\n                <label>Quantity - Presentation</label>\n                <input type=\"text\" name=\"quantityPresentation\" field={material.specification.quantityPresentation} onChange={handleInputChange} />\n                <label>Total Amount</label>\n                <input type=\"text\" name=\"amountToRequest\" field={material.specification.amountToRequest} onChange={handleInputChange} />\n                <label>Price</label>\n                <input type=\"text\" name=\"price\" field={material.specification.price} onChange={handleInputChange} />\n                <label>Supplier</label>\n                <input type=\"text\" name=\"supplier\" field={material.specification.supplier} onChange={handleInputChange} />\n                <td><button className=\"btn btn-warning\" onClick={() => this.addMaterial (material.idMat)}>Add new material</button></td>\n            </form>\n        )\n    }\n\n\n}\n\n\nexport default AddMaterialForm\n\n*/"]},"metadata":{},"sourceType":"module"}