{"ast":null,"code":"/*\nimport React, { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CourseDataService from \"./service/CourseDataService\";\n\nclass CourseComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            description: ''\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        console.log(this.state.id)\n\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n\n        CourseDataService.retrieveCourse(1, this.state.id)\n            .then(response => this.setState({\n                description: response.data.description\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.description) {\n            errors.description = 'Enter a Description'\n        } else if (values.description.length < 5) {\n            errors.description = 'Enter atleast 5 Characters in Description'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let username = 1\n\n        let course = {\n            id: this.state.id,\n            description: values.description\n        }\n\n        if (this.state.id === -1) {\n            CourseDataService.createCourse(username, course)\n                .then(() => this.props.history.push('/material'))\n        } else {\n            CourseDataService.updateCourse(username, this.state.id, course)\n                .then(() => this.props.history.push('/material'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { description, id } = this.state\n\n        return (\n            <div>\n                <h3>Course</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id, description }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                                  className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>Id</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CourseComponent\n*/","map":{"version":3,"sources":["/Users/ilsehernandez/material-app/src/CourseComponent.jsx"],"names":[],"mappings":"AAKA","sourcesContent":["\n\n\n\n\n/*\nimport React, { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CourseDataService from \"./service/CourseDataService\";\n\nclass CourseComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            description: ''\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        console.log(this.state.id)\n\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n\n        CourseDataService.retrieveCourse(1, this.state.id)\n            .then(response => this.setState({\n                description: response.data.description\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.description) {\n            errors.description = 'Enter a Description'\n        } else if (values.description.length < 5) {\n            errors.description = 'Enter atleast 5 Characters in Description'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let username = 1\n\n        let course = {\n            id: this.state.id,\n            description: values.description\n        }\n\n        if (this.state.id === -1) {\n            CourseDataService.createCourse(username, course)\n                .then(() => this.props.history.push('/material'))\n        } else {\n            CourseDataService.updateCourse(username, this.state.id, course)\n                .then(() => this.props.history.push('/material'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { description, id } = this.state\n\n        return (\n            <div>\n                <h3>Course</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id, description }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                                  className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>Id</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CourseComponent\n*/"]},"metadata":{},"sourceType":"module"}