{"ast":null,"code":"var _jsxFileName = \"/Users/ilsehernandez/material-app/src/forms/AddMaterialForm.js\";\nimport React, { Component } from 'react';\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\n\nclass AddMaterialForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({ ...this.state,\n        [name]: value\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      name: '',\n      keyName: '',\n      specification: {\n        presentation: '',\n        measurementType: '',\n        dimensions: '',\n        quantityPresentation: '',\n        amountToRequest: '',\n        price: '',\n        supplier: ''\n      },\n      message: null\n    };\n    this.addCourseClicked = this.addCourseClicked.bind(this);\n    this.refreshCourses = this.refreshCourses.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshCourses();\n  }\n\n  refreshCourses() {\n    CourseDataService.retrieveAllCourses().then(response => {\n      //console.log(response);\n      this.setState({\n        materials: response.data\n      });\n    });\n  }\n\n  addCourseClicked() {\n    console.log(this.state);\n    CourseDataService.createCourse(this.state).then(response => {\n      //console.log(response);\n      this.props.history.push(`/`);\n      this.setState({\n        material: response.data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Add Materials\"), this.state.message && React.createElement(\"div\", {\n      class: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.message), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(InputForm, {\n      name: \"name\",\n      label: \"name\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"keyName\",\n      label: \"keyName\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.keyName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"specification.presentation\",\n      label: \"presentation\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.presentation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"measurementType\",\n      label: \"measurementType\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.measurementType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"dimensions\",\n      label: \"dimensions\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.dimensions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"quantityPresentation\",\n      label: \"quantityPresentation\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.quantityPresentation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"amountToRequest\",\n      label: \"amountToRequest\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.amountToRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"price\",\n      label: \"price\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(InputForm, {\n      name: \"supplier\",\n      label: \"supplier\",\n      type: \"text\",\n      handleChange: this.handleChange,\n      value: this.supplier,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.addCourseClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Add\"))));\n  }\n\n}\n\nexport default AddMaterialForm;\n/*import InputForm from \"../InputForm\";\nimport React, { Component } from \"react\";\n//import AddressForm from \"../address-form/address-form.component\";\n//import DataService from \"../../services/data.service\";\nimport {Redirect} from \"react-router-dom\";\nimport specificationForm from \"../specificationForm\";\nimport {CourseDataService} from \"../service/CourseDataService\";\nimport MaterialApp from \"../MaterialApp\";\n\nclass AddMaterialForm extends Component {\n    state={\n        idMat: null,\n        name: '',\n        keyName: '',\n        specification: {\n            presentation: '',\n            measurementType: '',\n            dimensions: '',\n            quantityPresentation: '',\n            amountToRequest: '',\n            price: '',\n            supplier: ''\n        }\n    };\n\n    componentDidMount() {\n        const {\n            match: { params }\n        } = this.props;\n            /*\n            DataService.findById(\"destinatinos\", id)\n                .then(({ data: { id, address, destinationType } }) => {\n                    console.log(address);\n                    this.setState({ id, address, destinationType });\n                })\n                .catch(e =>\n                    console.error(`An error occurred while fetching Destination ${id}`, e)\n                );\n    }\n\n    handleSpecificationChange = event => {\n        const {value, name} = event.target;\n        const {specification} = this.state;\n        specification[name] = value;\n        this.setState({specification});\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const { material, specification, id } = this.state;\n        CourseDataService.createCourse(material).then(\n            response => {\n                //console.log(response);\n                this.setState({ material : response.data })\n            }\n        ) // create(\"materials\", payload);\n        // do something with this\n        const payload = { material, specification };\n        const formAction = this.state.isUpdate\n            ? CourseDataService.update(\"materials\", id, payload)\n            : CourseDataService.create(\"materials\", payload);\n        formAction.then().catch(e => console.debug(e));\n        return <Redirect to= {`/material/`}/>;\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>{`${this.state.isUpdate ? \"Update\" : \"New\"} Destination`}</h1>\n                <form>\n                    <h4>Address Details</h4>\n                    <specificationForm\n                        handleChange={this.handleSpecificationChange}\n                        {...this.state}\n                    />\n                    <InputForm\n                        name=\"amountToRequest\"\n                        label=\"amountToRequest\"\n                        type=\"text\"\n                        handleChange={this.handleChange}\n                        value={this.amountToRequest}\n                    />\n                    <button onClick={this.handleSubmit} className=\"btn btn-primary\" >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\nexport default AddMaterialForm\n*/","map":{"version":3,"sources":["/Users/ilsehernandez/material-app/src/forms/AddMaterialForm.js"],"names":["React","Component","CourseDataService","InputForm","AddMaterialForm","constructor","props","handleChange","event","value","name","target","setState","state","console","log","keyName","specification","presentation","measurementType","dimensions","quantityPresentation","amountToRequest","price","supplier","message","addCourseClicked","bind","refreshCourses","componentDidMount","retrieveAllCourses","then","response","materials","data","createCourse","history","push","material","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AACpCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAgDnBC,YAhDmB,GAgDJC,KAAK,IAAI;AACpB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBF,KAAK,CAACG,MAA9B;AACA,WAAKC,QAAL,CAAc,EACV,GAAG,KAAKC,KADE;AAEV,SAACH,IAAD,GAAQD;AAFE,OAAd;AAIAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACH,KAvDkB;;AAEf,SAAKA,KAAL,GAAa;AACTH,MAAAA,IAAI,EAAE,EADG;AAETM,MAAAA,OAAO,EAAE,EAFA;AAGTC,MAAAA,aAAa,EAAE;AACXC,QAAAA,YAAY,EAAE,EADH;AAEXC,QAAAA,eAAe,EAAE,EAFN;AAGXC,QAAAA,UAAU,EAAE,EAHD;AAIXC,QAAAA,oBAAoB,EAAE,EAJX;AAKXC,QAAAA,eAAe,EAAE,EALN;AAMXC,QAAAA,KAAK,EAAE,EANI;AAOXC,QAAAA,QAAQ,EAAE;AAPC,OAHN;AAYTC,MAAAA,OAAO,EAAE;AAZA,KAAb;AAcA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAIDE,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,cAAL;AACH;;AAEDA,EAAAA,cAAc,GAAG;AACb1B,IAAAA,iBAAiB,CAAC4B,kBAAlB,GACKC,IADL,CAEQC,QAAQ,IAAI;AACR;AACA,WAAKpB,QAAL,CAAc;AAAEqB,QAAAA,SAAS,EAAED,QAAQ,CAACE;AAAtB,OAAd;AACH,KALT;AAOH;;AAEDR,EAAAA,gBAAgB,GAAG;AACfZ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACAX,IAAAA,iBAAiB,CAACiC,YAAlB,CAA+B,KAAKtB,KAApC,EACKkB,IADL,CAEQC,QAAQ,IAAI;AACR;AACA,WAAK1B,KAAL,CAAW8B,OAAX,CAAmBC,IAAnB,CAAyB,GAAzB;AACA,WAAKzB,QAAL,CAAc;AAAE0B,QAAAA,QAAQ,EAAEN,QAAQ,CAACE;AAArB,OAAd;AACH,KANT;AAQH;;AAYDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEK,KAAK1B,KAAL,CAAWY,OAAX,IAAsB;AAAK,MAAA,KAAK,EAAC,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKZ,KAAL,CAAWY,OAA7C,CAF3B,EAGI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAC,MAFV;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,YAAY,EAAE,KAAKlB,YAJvB;AAKI,MAAA,KAAK,EAAE,KAAKG,IALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,SADT;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,YAAY,EAAE,KAAKH,YAJvB;AAKI,MAAA,KAAK,EAAE,KAAKS,OALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAeI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,4BADT;AAEI,MAAA,KAAK,EAAC,cAFV;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,YAAY,EAAE,KAAKT,YAJvB;AAKI,MAAA,KAAK,EAAE,KAAKW,YALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,EAsBI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,iBADT;AAEI,MAAA,KAAK,EAAC,iBAFV;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,YAAY,EAAE,KAAKX,YAJvB;AAKI,MAAA,KAAK,EAAE,KAAKY,eALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,EA6BI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,YADT;AAEI,MAAA,KAAK,EAAC,YAFV;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,YAAY,EAAE,KAAKZ,YAJvB;AAKI,MAAA,KAAK,EAAE,KAAKa,UALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BJ,EAoCI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,sBADT;AAEI,MAAA,KAAK,EAAC,sBAFV;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,YAAY,EAAE,KAAKb,YAJvB;AAKI,MAAA,KAAK,EAAE,KAAKc,oBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCJ,EA2CI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,iBADT;AAEI,MAAA,KAAK,EAAC,iBAFV;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,YAAY,EAAE,KAAKd,YAJvB;AAKI,MAAA,KAAK,EAAE,KAAKe,eALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3CJ,EAkDI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,KAAK,EAAC,OAFV;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,YAAY,EAAE,KAAKf,YAJvB;AAKI,MAAA,KAAK,EAAE,KAAKgB,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlDJ,EAyDI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,KAAK,EAAC,UAFV;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,YAAY,EAAE,KAAKhB,YAJvB;AAKI,MAAA,KAAK,EAAE,KAAKiB,QALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzDJ,CADJ,EAkEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKE,gBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAlEJ,CAHJ,CADJ;AA4EH;;AAxImC;;AA2IxC,eAAetB,eAAf;AAMA","sourcesContent":["import React, { Component } from 'react'\nimport CourseDataService from \"../service/CourseDataService\";\nimport InputForm from \"../InputForm\";\n\nclass AddMaterialForm extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            name: '',\n            keyName: '',\n            specification: {\n                presentation: '',\n                measurementType: '',\n                dimensions: '',\n                quantityPresentation: '',\n                amountToRequest: '',\n                price: '',\n                supplier: ''\n            },\n            message: null\n        }\n        this.addCourseClicked = this.addCourseClicked.bind(this)\n        this.refreshCourses = this.refreshCourses.bind(this)\n    }\n\n\n\n    componentDidMount() {\n        this.refreshCourses();\n    }\n\n    refreshCourses() {\n        CourseDataService.retrieveAllCourses()\n            .then(\n                response => {\n                    //console.log(response);\n                    this.setState({ materials: response.data })\n                }\n            )\n    }\n\n    addCourseClicked() {\n        console.log(this.state)\n        CourseDataService.createCourse(this.state)\n            .then(\n                response => {\n                    //console.log(response);\n                    this.props.history.push(`/`)\n                    this.setState({ material: response.data })\n                }\n            )\n    }\n\n    handleChange = event => {\n        const { value, name } = event.target;\n        this.setState({\n            ...this.state,\n            [name]: value\n        });\n        console.log(this.state)\n    };\n\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h3>Add Materials</h3>\n                {this.state.message && <div class=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <InputForm\n                            name=\"name\"\n                            label=\"name\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.name}\n                        />\n                        <InputForm\n                            name=\"keyName\"\n                            label=\"keyName\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.keyName}\n                        />\n                        <InputForm\n                            name=\"specification.presentation\"\n                            label=\"presentation\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.presentation}\n                        />\n                        <InputForm\n                            name=\"measurementType\"\n                            label=\"measurementType\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.measurementType}\n                        />\n                        <InputForm\n                            name=\"dimensions\"\n                            label=\"dimensions\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.dimensions}\n                        />\n                        <InputForm\n                            name=\"quantityPresentation\"\n                            label=\"quantityPresentation\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.quantityPresentation}\n                        />\n                        <InputForm\n                            name=\"amountToRequest\"\n                            label=\"amountToRequest\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.amountToRequest}\n                        />\n                        <InputForm\n                            name=\"price\"\n                            label=\"price\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.price}\n                        />\n                        <InputForm\n                            name=\"supplier\"\n                            label=\"supplier\"\n                            type=\"text\"\n                            handleChange={this.handleChange}\n                            value={this.supplier}\n                        />\n                    </table>\n                    <div className=\"row\">\n                        <button className=\"btn btn-success\" onClick={this.addCourseClicked}>Add</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddMaterialForm\n\n\n\n\n\n/*import InputForm from \"../InputForm\";\nimport React, { Component } from \"react\";\n//import AddressForm from \"../address-form/address-form.component\";\n//import DataService from \"../../services/data.service\";\nimport {Redirect} from \"react-router-dom\";\nimport specificationForm from \"../specificationForm\";\nimport {CourseDataService} from \"../service/CourseDataService\";\nimport MaterialApp from \"../MaterialApp\";\n\nclass AddMaterialForm extends Component {\n    state={\n        idMat: null,\n        name: '',\n        keyName: '',\n        specification: {\n            presentation: '',\n            measurementType: '',\n            dimensions: '',\n            quantityPresentation: '',\n            amountToRequest: '',\n            price: '',\n            supplier: ''\n        }\n    };\n\n    componentDidMount() {\n        const {\n            match: { params }\n        } = this.props;\n            /*\n            DataService.findById(\"destinatinos\", id)\n                .then(({ data: { id, address, destinationType } }) => {\n                    console.log(address);\n                    this.setState({ id, address, destinationType });\n                })\n                .catch(e =>\n                    console.error(`An error occurred while fetching Destination ${id}`, e)\n                );\n    }\n\n    handleSpecificationChange = event => {\n        const {value, name} = event.target;\n        const {specification} = this.state;\n        specification[name] = value;\n        this.setState({specification});\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n        const { material, specification, id } = this.state;\n        CourseDataService.createCourse(material).then(\n            response => {\n                //console.log(response);\n                this.setState({ material : response.data })\n            }\n        ) // create(\"materials\", payload);\n        // do something with this\n        const payload = { material, specification };\n        const formAction = this.state.isUpdate\n            ? CourseDataService.update(\"materials\", id, payload)\n            : CourseDataService.create(\"materials\", payload);\n        formAction.then().catch(e => console.debug(e));\n        return <Redirect to= {`/material/`}/>;\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>{`${this.state.isUpdate ? \"Update\" : \"New\"} Destination`}</h1>\n                <form>\n                    <h4>Address Details</h4>\n                    <specificationForm\n                        handleChange={this.handleSpecificationChange}\n                        {...this.state}\n                    />\n                    <InputForm\n                        name=\"amountToRequest\"\n                        label=\"amountToRequest\"\n                        type=\"text\"\n                        handleChange={this.handleChange}\n                        value={this.amountToRequest}\n                    />\n                    <button onClick={this.handleSubmit} className=\"btn btn-primary\" >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\nexport default AddMaterialForm\n*/"]},"metadata":{},"sourceType":"module"}